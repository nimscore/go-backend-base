{
  "swagger": "2.0",
  "info": {
    "title": "authorization.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "AuthorizationService"
    },
    {
      "name": "CommunityService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/auth/login": {
      "post": {
        "operationId": "AuthorizationService_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLoginRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "operationId": "AuthorizationService_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object",
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoLogoutRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "operationId": "AuthorizationService_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRefreshResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRefreshRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/auth/register": {
      "post": {
        "operationId": "AuthorizationService_Register",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoRegisterRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/auth/validate": {
      "post": {
        "operationId": "AuthorizationService_ValidateToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoValidateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoValidateRequest"
            }
          }
        ],
        "tags": [
          "AuthorizationService"
        ]
      }
    },
    "/communities": {
      "get": {
        "operationId": "CommunityService_ListCommunities",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoListCommunitiesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "По умолчанию 40",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "cursor",
            "description": "ID последнего элемента предыдущей страницы",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CommunityService"
        ]
      },
      "post": {
        "operationId": "CommunityService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoCreateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protoCreateRequest"
            }
          }
        ],
        "tags": [
          "CommunityService"
        ]
      }
    },
    "/communities/slug/{slug}": {
      "get": {
        "operationId": "CommunityService_GetCommunity2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetCommunityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CommunityService"
        ]
      }
    },
    "/communities/{id}": {
      "get": {
        "operationId": "CommunityService_GetCommunity",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protoGetCommunityResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "CommunityService"
        ]
      }
    }
  },
  "definitions": {
    "protoCommunity": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ownerId": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Community message"
    },
    "protoCreateRequest": {
      "type": "object",
      "properties": {
        "ownerId": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "Create Community"
    },
    "protoCreateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "protoGetCommunityResponse": {
      "type": "object",
      "properties": {
        "community": {
          "$ref": "#/definitions/protoCommunity"
        }
      }
    },
    "protoListCommunitiesResponse": {
      "type": "object",
      "properties": {
        "communities": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protoCommunity"
          }
        },
        "nextCursor": {
          "type": "string",
          "title": "ID для следующей страницы"
        },
        "hasMore": {
          "type": "boolean",
          "title": "Есть ли ещё элементы"
        }
      }
    },
    "protoLoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoLoginResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/protoUser"
        },
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "protoLogoutRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "protoRefreshRequest": {
      "type": "object",
      "properties": {
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "protoRefreshResponse": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        },
        "refreshToken": {
          "type": "string"
        }
      }
    },
    "protoRegisterRequest": {
      "type": "object",
      "properties": {
        "slug": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "protoRegisterResponse": {
      "type": "object"
    },
    "protoUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "slug": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "isVerified": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protoValidateRequest": {
      "type": "object",
      "properties": {
        "accessToken": {
          "type": "string"
        }
      }
    },
    "protoValidateResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "valid": {
          "type": "boolean"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
