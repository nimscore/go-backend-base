syntax = "proto3";
package proto;
option go_package = "/proto";

import "entity.proto";

import "google/api/annotations.proto";

// ============================================================================
// Create (FR-345-354)
// ============================================================================

message CreateCommunityRequest {
  string name        = 1;  // 3-50 chars
  string description = 2;  // max 500 chars
  string rules       = 3;
}

message CreateCommunityResponse {
  Community community = 1;
}

// ============================================================================
// Get (FR-224, FR-230)
// ============================================================================

message GetCommunityRequest {
  string community_id = 1;
}

message GetCommunityResponse {
  Community community = 1;
}

// ============================================================================
// Update (FR-391-399)
// ============================================================================

message UpdateCommunityRequest {
  string community_id         = 1;
  optional string name        = 2;
  optional string description = 3;
  optional string rules       = 4;
}

message UpdateCommunityResponse {
  Community community = 1;
}

// ============================================================================
// Delete (FR-225, FR-236, FR-237)
// ============================================================================

message DeleteCommunityRequest {
  string community_id = 1;
  bool confirm        = 2;  // must be true
}

message DeleteCommunityResponse {
  string message = 1;
}

// ============================================================================
// ListCommunities (FR-226, FR-231)
// ============================================================================

message ListCommunitiesRequest {
  string cursor = 1;
  int32 limit   = 2;
}

message ListCommunitiesResponse {
  repeated Community communities = 1;
  string next_cursor             = 2;
  bool has_more                  = 3;
}

// ============================================================================
// Join (FR-179, FR-181, FR-183)
// ============================================================================

message JoinCommunityRequest {
  string community_id = 1;
}

message JoinCommunityResponse {
  string message = 1;
}

// ============================================================================
// Leave (FR-180, FR-182, FR-184, FR-185)
// ============================================================================

message LeaveCommunityRequest {
  string community_id = 1;
}

message LeaveCommunityResponse {
  string message = 1;
}

// ============================================================================
// Ban (FR-228, FR-233-235)
// ============================================================================

message BanCommunityRequest {
  string community_id = 1;
  string reason       = 2;
}

message BanCommunityResponse {
  string message = 1;
}

// ============================================================================
// Unban (FR-229)
// ============================================================================

message UnbanCommunityRequest {
  string community_id = 1;
}

message UnbanCommunityResponse {
  string message = 1;
}

// ============================================================================
// TransferOwnership
// ============================================================================

message TransferCommunityOwnershipRequest {
  string community_id = 1;
  string new_owner_id = 2;
}

message TransferCommunityOwnershipResponse {
  string message = 1;
}

// ============================================================================
// Service Definition
// ============================================================================

service CommunityService {
  // CRUD Operations
  rpc Create(CreateCommunityRequest) returns (CreateCommunityResponse) {
    option (google.api.http) = {
      post: "/communities"
      body: "*"
    };
  }

  rpc Get(GetCommunityRequest) returns (GetCommunityResponse) {
    option (google.api.http) = {
      get: "/communities/{community_id}"
    };
  }

  rpc Update(UpdateCommunityRequest) returns (UpdateCommunityResponse) {
    option (google.api.http) = {
      patch: "/communities/{community_id}"
      body: "*"
    };
  }

  rpc Delete(DeleteCommunityRequest) returns (DeleteCommunityResponse) {
    option (google.api.http) = {
      delete: "/communities/{community_id}"
    };
  }

  // List Operations
  rpc ListCommunities(ListCommunitiesRequest) returns (ListCommunitiesResponse) {
    option (google.api.http) = {
      get: "/communities"
    };
  }

  // Membership Operations
  rpc Join(JoinCommunityRequest) returns (JoinCommunityResponse) {
    option (google.api.http) = {
      post: "/communities/{community_id}/join"
    };
  }

  rpc Leave(LeaveCommunityRequest) returns (LeaveCommunityResponse) {
    option (google.api.http) = {
      post: "/communities/{community_id}/leave"
    };
  }

  // Moderation Operations
  rpc Ban(BanCommunityRequest) returns (BanCommunityResponse) {
    option (google.api.http) = {
      post: "/communities/{community_id}/ban"
      body: "*"
    };
  }

  rpc Unban(UnbanCommunityRequest) returns (UnbanCommunityResponse) {
    option (google.api.http) = {
      post: "/communities/{community_id}/unban"
    };
  }

  // Ownership Operations
  rpc TransferOwnership(TransferCommunityOwnershipRequest) returns (TransferCommunityOwnershipResponse) {
    option (google.api.http) = {
      post: "/communities/{community_id}/transfer-ownership"
      body: "*"
    };
  }
}
