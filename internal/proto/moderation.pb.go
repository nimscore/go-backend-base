// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: moderation.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MuteDuration int32

const (
	MuteDuration_MUTE_DURATION_UNSPECIFIED MuteDuration = 0
	MuteDuration_MUTE_DURATION_1_HOUR      MuteDuration = 1
	MuteDuration_MUTE_DURATION_24_HOURS    MuteDuration = 2
	MuteDuration_MUTE_DURATION_7_DAYS      MuteDuration = 3
	MuteDuration_MUTE_DURATION_30_DAYS     MuteDuration = 4
	MuteDuration_MUTE_DURATION_PERMANENT   MuteDuration = 5
)

// Enum value maps for MuteDuration.
var (
	MuteDuration_name = map[int32]string{
		0: "MUTE_DURATION_UNSPECIFIED",
		1: "MUTE_DURATION_1_HOUR",
		2: "MUTE_DURATION_24_HOURS",
		3: "MUTE_DURATION_7_DAYS",
		4: "MUTE_DURATION_30_DAYS",
		5: "MUTE_DURATION_PERMANENT",
	}
	MuteDuration_value = map[string]int32{
		"MUTE_DURATION_UNSPECIFIED": 0,
		"MUTE_DURATION_1_HOUR":      1,
		"MUTE_DURATION_24_HOURS":    2,
		"MUTE_DURATION_7_DAYS":      3,
		"MUTE_DURATION_30_DAYS":     4,
		"MUTE_DURATION_PERMANENT":   5,
	}
)

func (x MuteDuration) Enum() *MuteDuration {
	p := new(MuteDuration)
	*p = x
	return p
}

func (x MuteDuration) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MuteDuration) Descriptor() protoreflect.EnumDescriptor {
	return file_moderation_proto_enumTypes[0].Descriptor()
}

func (MuteDuration) Type() protoreflect.EnumType {
	return &file_moderation_proto_enumTypes[0]
}

func (x MuteDuration) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MuteDuration.Descriptor instead.
func (MuteDuration) EnumDescriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{0}
}

type ModerationAction struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ModeratorId       string                 `protobuf:"bytes,2,opt,name=moderator_id,json=moderatorId,proto3" json:"moderator_id,omitempty"`
	ModeratorUsername string                 `protobuf:"bytes,3,opt,name=moderator_username,json=moderatorUsername,proto3" json:"moderator_username,omitempty"`
	TargetUserId      string                 `protobuf:"bytes,4,opt,name=target_user_id,json=targetUserId,proto3" json:"target_user_id,omitempty"`
	TargetUsername    string                 `protobuf:"bytes,5,opt,name=target_username,json=targetUsername,proto3" json:"target_username,omitempty"`
	ActionType        string                 `protobuf:"bytes,6,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // ban, unban, mute, unmute
	Reason            string                 `protobuf:"bytes,7,opt,name=reason,proto3" json:"reason,omitempty"`
	CommunityId       *string                `protobuf:"bytes,8,opt,name=community_id,json=communityId,proto3,oneof" json:"community_id,omitempty"` // only for community-specific actions
	CreatedAt         *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ModerationAction) Reset() {
	*x = ModerationAction{}
	mi := &file_moderation_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ModerationAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModerationAction) ProtoMessage() {}

func (x *ModerationAction) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModerationAction.ProtoReflect.Descriptor instead.
func (*ModerationAction) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{0}
}

func (x *ModerationAction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ModerationAction) GetModeratorId() string {
	if x != nil {
		return x.ModeratorId
	}
	return ""
}

func (x *ModerationAction) GetModeratorUsername() string {
	if x != nil {
		return x.ModeratorUsername
	}
	return ""
}

func (x *ModerationAction) GetTargetUserId() string {
	if x != nil {
		return x.TargetUserId
	}
	return ""
}

func (x *ModerationAction) GetTargetUsername() string {
	if x != nil {
		return x.TargetUsername
	}
	return ""
}

func (x *ModerationAction) GetActionType() string {
	if x != nil {
		return x.ActionType
	}
	return ""
}

func (x *ModerationAction) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ModerationAction) GetCommunityId() string {
	if x != nil && x.CommunityId != nil {
		return *x.CommunityId
	}
	return ""
}

func (x *ModerationAction) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type BanUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanUserRequest) Reset() {
	*x = BanUserRequest{}
	mi := &file_moderation_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserRequest) ProtoMessage() {}

func (x *BanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserRequest.ProtoReflect.Descriptor instead.
func (*BanUserRequest) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{1}
}

func (x *BanUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BanUserRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type BanUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Action        *ModerationAction      `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanUserResponse) Reset() {
	*x = BanUserResponse{}
	mi := &file_moderation_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserResponse) ProtoMessage() {}

func (x *BanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserResponse.ProtoReflect.Descriptor instead.
func (*BanUserResponse) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{2}
}

func (x *BanUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BanUserResponse) GetAction() *ModerationAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type UnbanUserRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbanUserRequest) Reset() {
	*x = UnbanUserRequest{}
	mi := &file_moderation_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbanUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanUserRequest) ProtoMessage() {}

func (x *UnbanUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanUserRequest.ProtoReflect.Descriptor instead.
func (*UnbanUserRequest) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{3}
}

func (x *UnbanUserRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

type UnbanUserResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Action        *ModerationAction      `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbanUserResponse) Reset() {
	*x = UnbanUserResponse{}
	mi := &file_moderation_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbanUserResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanUserResponse) ProtoMessage() {}

func (x *UnbanUserResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanUserResponse.ProtoReflect.Descriptor instead.
func (*UnbanUserResponse) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{4}
}

func (x *UnbanUserResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UnbanUserResponse) GetAction() *ModerationAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type BanUserInCommunityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId   string                 `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanUserInCommunityRequest) Reset() {
	*x = BanUserInCommunityRequest{}
	mi := &file_moderation_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanUserInCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserInCommunityRequest) ProtoMessage() {}

func (x *BanUserInCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserInCommunityRequest.ProtoReflect.Descriptor instead.
func (*BanUserInCommunityRequest) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{5}
}

func (x *BanUserInCommunityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *BanUserInCommunityRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *BanUserInCommunityRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type BanUserInCommunityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Action        *ModerationAction      `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanUserInCommunityResponse) Reset() {
	*x = BanUserInCommunityResponse{}
	mi := &file_moderation_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanUserInCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanUserInCommunityResponse) ProtoMessage() {}

func (x *BanUserInCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanUserInCommunityResponse.ProtoReflect.Descriptor instead.
func (*BanUserInCommunityResponse) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{6}
}

func (x *BanUserInCommunityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *BanUserInCommunityResponse) GetAction() *ModerationAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type UnbanUserInCommunityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId   string                 `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbanUserInCommunityRequest) Reset() {
	*x = UnbanUserInCommunityRequest{}
	mi := &file_moderation_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbanUserInCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanUserInCommunityRequest) ProtoMessage() {}

func (x *UnbanUserInCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanUserInCommunityRequest.ProtoReflect.Descriptor instead.
func (*UnbanUserInCommunityRequest) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{7}
}

func (x *UnbanUserInCommunityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UnbanUserInCommunityRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

type UnbanUserInCommunityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Action        *ModerationAction      `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnbanUserInCommunityResponse) Reset() {
	*x = UnbanUserInCommunityResponse{}
	mi := &file_moderation_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnbanUserInCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnbanUserInCommunityResponse) ProtoMessage() {}

func (x *UnbanUserInCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnbanUserInCommunityResponse.ProtoReflect.Descriptor instead.
func (*UnbanUserInCommunityResponse) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{8}
}

func (x *UnbanUserInCommunityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UnbanUserInCommunityResponse) GetAction() *ModerationAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type MuteUserInCommunityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId   string                 `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Duration      MuteDuration           `protobuf:"varint,3,opt,name=duration,proto3,enum=proto.MuteDuration" json:"duration,omitempty"`
	Reason        string                 `protobuf:"bytes,4,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MuteUserInCommunityRequest) Reset() {
	*x = MuteUserInCommunityRequest{}
	mi := &file_moderation_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MuteUserInCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteUserInCommunityRequest) ProtoMessage() {}

func (x *MuteUserInCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteUserInCommunityRequest.ProtoReflect.Descriptor instead.
func (*MuteUserInCommunityRequest) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{9}
}

func (x *MuteUserInCommunityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *MuteUserInCommunityRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *MuteUserInCommunityRequest) GetDuration() MuteDuration {
	if x != nil {
		return x.Duration
	}
	return MuteDuration_MUTE_DURATION_UNSPECIFIED
}

func (x *MuteUserInCommunityRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type MuteUserInCommunityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	MutedUntil    *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=muted_until,json=mutedUntil,proto3" json:"muted_until,omitempty"`
	Action        *ModerationAction      `protobuf:"bytes,3,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MuteUserInCommunityResponse) Reset() {
	*x = MuteUserInCommunityResponse{}
	mi := &file_moderation_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MuteUserInCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MuteUserInCommunityResponse) ProtoMessage() {}

func (x *MuteUserInCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MuteUserInCommunityResponse.ProtoReflect.Descriptor instead.
func (*MuteUserInCommunityResponse) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{10}
}

func (x *MuteUserInCommunityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MuteUserInCommunityResponse) GetMutedUntil() *timestamppb.Timestamp {
	if x != nil {
		return x.MutedUntil
	}
	return nil
}

func (x *MuteUserInCommunityResponse) GetAction() *ModerationAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type UnmuteUserInCommunityRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CommunityId   string                 `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmuteUserInCommunityRequest) Reset() {
	*x = UnmuteUserInCommunityRequest{}
	mi := &file_moderation_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmuteUserInCommunityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteUserInCommunityRequest) ProtoMessage() {}

func (x *UnmuteUserInCommunityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteUserInCommunityRequest.ProtoReflect.Descriptor instead.
func (*UnmuteUserInCommunityRequest) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{11}
}

func (x *UnmuteUserInCommunityRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UnmuteUserInCommunityRequest) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

type UnmuteUserInCommunityResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Action        *ModerationAction      `protobuf:"bytes,2,opt,name=action,proto3" json:"action,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnmuteUserInCommunityResponse) Reset() {
	*x = UnmuteUserInCommunityResponse{}
	mi := &file_moderation_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnmuteUserInCommunityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnmuteUserInCommunityResponse) ProtoMessage() {}

func (x *UnmuteUserInCommunityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnmuteUserInCommunityResponse.ProtoReflect.Descriptor instead.
func (*UnmuteUserInCommunityResponse) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{12}
}

func (x *UnmuteUserInCommunityResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UnmuteUserInCommunityResponse) GetAction() *ModerationAction {
	if x != nil {
		return x.Action
	}
	return nil
}

type ListModerationLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommunityId   *string                `protobuf:"bytes,1,opt,name=community_id,json=communityId,proto3,oneof" json:"community_id,omitempty"` // if empty, platform-wide logs
	Cursor        string                 `protobuf:"bytes,2,opt,name=cursor,proto3" json:"cursor,omitempty"`
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListModerationLogsRequest) Reset() {
	*x = ListModerationLogsRequest{}
	mi := &file_moderation_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModerationLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModerationLogsRequest) ProtoMessage() {}

func (x *ListModerationLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModerationLogsRequest.ProtoReflect.Descriptor instead.
func (*ListModerationLogsRequest) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{13}
}

func (x *ListModerationLogsRequest) GetCommunityId() string {
	if x != nil && x.CommunityId != nil {
		return *x.CommunityId
	}
	return ""
}

func (x *ListModerationLogsRequest) GetCursor() string {
	if x != nil {
		return x.Cursor
	}
	return ""
}

func (x *ListModerationLogsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type ListModerationLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Actions       []*ModerationAction    `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	NextCursor    string                 `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListModerationLogsResponse) Reset() {
	*x = ListModerationLogsResponse{}
	mi := &file_moderation_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListModerationLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListModerationLogsResponse) ProtoMessage() {}

func (x *ListModerationLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_moderation_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListModerationLogsResponse.ProtoReflect.Descriptor instead.
func (*ListModerationLogsResponse) Descriptor() ([]byte, []int) {
	return file_moderation_proto_rawDescGZIP(), []int{14}
}

func (x *ListModerationLogsResponse) GetActions() []*ModerationAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

func (x *ListModerationLogsResponse) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

func (x *ListModerationLogsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

var File_moderation_proto protoreflect.FileDescriptor

const file_moderation_proto_rawDesc = "" +
	"\n" +
	"\x10moderation.proto\x12\x05proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/api/annotations.proto\"\xf0\x02\n" +
	"\x10ModerationAction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\fmoderator_id\x18\x02 \x01(\tR\vmoderatorId\x12-\n" +
	"\x12moderator_username\x18\x03 \x01(\tR\x11moderatorUsername\x12$\n" +
	"\x0etarget_user_id\x18\x04 \x01(\tR\ftargetUserId\x12'\n" +
	"\x0ftarget_username\x18\x05 \x01(\tR\x0etargetUsername\x12\x1f\n" +
	"\vaction_type\x18\x06 \x01(\tR\n" +
	"actionType\x12\x16\n" +
	"\x06reason\x18\a \x01(\tR\x06reason\x12&\n" +
	"\fcommunity_id\x18\b \x01(\tH\x00R\vcommunityId\x88\x01\x01\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAtB\x0f\n" +
	"\r_community_id\"A\n" +
	"\x0eBanUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\\\n" +
	"\x0fBanUserResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12/\n" +
	"\x06action\x18\x02 \x01(\v2\x17.proto.ModerationActionR\x06action\"+\n" +
	"\x10UnbanUserRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\"^\n" +
	"\x11UnbanUserResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12/\n" +
	"\x06action\x18\x02 \x01(\v2\x17.proto.ModerationActionR\x06action\"o\n" +
	"\x19BanUserInCommunityRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\fcommunity_id\x18\x02 \x01(\tR\vcommunityId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"g\n" +
	"\x1aBanUserInCommunityResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12/\n" +
	"\x06action\x18\x02 \x01(\v2\x17.proto.ModerationActionR\x06action\"Y\n" +
	"\x1bUnbanUserInCommunityRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\fcommunity_id\x18\x02 \x01(\tR\vcommunityId\"i\n" +
	"\x1cUnbanUserInCommunityResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12/\n" +
	"\x06action\x18\x02 \x01(\v2\x17.proto.ModerationActionR\x06action\"\xa1\x01\n" +
	"\x1aMuteUserInCommunityRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\fcommunity_id\x18\x02 \x01(\tR\vcommunityId\x12/\n" +
	"\bduration\x18\x03 \x01(\x0e2\x13.proto.MuteDurationR\bduration\x12\x16\n" +
	"\x06reason\x18\x04 \x01(\tR\x06reason\"\xa5\x01\n" +
	"\x1bMuteUserInCommunityResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12;\n" +
	"\vmuted_until\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"mutedUntil\x12/\n" +
	"\x06action\x18\x03 \x01(\v2\x17.proto.ModerationActionR\x06action\"Z\n" +
	"\x1cUnmuteUserInCommunityRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12!\n" +
	"\fcommunity_id\x18\x02 \x01(\tR\vcommunityId\"j\n" +
	"\x1dUnmuteUserInCommunityResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12/\n" +
	"\x06action\x18\x02 \x01(\v2\x17.proto.ModerationActionR\x06action\"\x82\x01\n" +
	"\x19ListModerationLogsRequest\x12&\n" +
	"\fcommunity_id\x18\x01 \x01(\tH\x00R\vcommunityId\x88\x01\x01\x12\x16\n" +
	"\x06cursor\x18\x02 \x01(\tR\x06cursor\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limitB\x0f\n" +
	"\r_community_id\"\x8b\x01\n" +
	"\x1aListModerationLogsResponse\x121\n" +
	"\aactions\x18\x01 \x03(\v2\x17.proto.ModerationActionR\aactions\x12\x1f\n" +
	"\vnext_cursor\x18\x02 \x01(\tR\n" +
	"nextCursor\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore*\xb5\x01\n" +
	"\fMuteDuration\x12\x1d\n" +
	"\x19MUTE_DURATION_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14MUTE_DURATION_1_HOUR\x10\x01\x12\x1a\n" +
	"\x16MUTE_DURATION_24_HOURS\x10\x02\x12\x18\n" +
	"\x14MUTE_DURATION_7_DAYS\x10\x03\x12\x19\n" +
	"\x15MUTE_DURATION_30_DAYS\x10\x04\x12\x1b\n" +
	"\x17MUTE_DURATION_PERMANENT\x10\x052\xf7\a\n" +
	"\x11ModerationService\x12d\n" +
	"\aBanUser\x12\x15.proto.BanUserRequest\x1a\x16.proto.BanUserResponse\"*\x82\xd3\xe4\x93\x02$:\x01*\"\x1f/moderation/users/{user_id}/ban\x12i\n" +
	"\tUnbanUser\x12\x17.proto.UnbanUserRequest\x1a\x18.proto.UnbanUserResponse\")\x82\xd3\xe4\x93\x02#\"!/moderation/users/{user_id}/unban\x12\xa0\x01\n" +
	"\x12BanUserInCommunity\x12 .proto.BanUserInCommunityRequest\x1a!.proto.BanUserInCommunityResponse\"E\x82\xd3\xe4\x93\x02?:\x01*\":/moderation/communities/{community_id}/users/{user_id}/ban\x12\xa5\x01\n" +
	"\x14UnbanUserInCommunity\x12\".proto.UnbanUserInCommunityRequest\x1a#.proto.UnbanUserInCommunityResponse\"D\x82\xd3\xe4\x93\x02>\"</moderation/communities/{community_id}/users/{user_id}/unban\x12\xa4\x01\n" +
	"\x13MuteUserInCommunity\x12!.proto.MuteUserInCommunityRequest\x1a\".proto.MuteUserInCommunityResponse\"F\x82\xd3\xe4\x93\x02@:\x01*\";/moderation/communities/{community_id}/users/{user_id}/mute\x12\xa9\x01\n" +
	"\x15UnmuteUserInCommunity\x12#.proto.UnmuteUserInCommunityRequest\x1a$.proto.UnmuteUserInCommunityResponse\"E\x82\xd3\xe4\x93\x02?\"=/moderation/communities/{community_id}/users/{user_id}/unmute\x12s\n" +
	"\x12ListModerationLogs\x12 .proto.ListModerationLogsRequest\x1a!.proto.ListModerationLogsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/moderation/logsB\bZ\x06/protob\x06proto3"

var (
	file_moderation_proto_rawDescOnce sync.Once
	file_moderation_proto_rawDescData []byte
)

func file_moderation_proto_rawDescGZIP() []byte {
	file_moderation_proto_rawDescOnce.Do(func() {
		file_moderation_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_moderation_proto_rawDesc), len(file_moderation_proto_rawDesc)))
	})
	return file_moderation_proto_rawDescData
}

var file_moderation_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_moderation_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_moderation_proto_goTypes = []any{
	(MuteDuration)(0),                     // 0: proto.MuteDuration
	(*ModerationAction)(nil),              // 1: proto.ModerationAction
	(*BanUserRequest)(nil),                // 2: proto.BanUserRequest
	(*BanUserResponse)(nil),               // 3: proto.BanUserResponse
	(*UnbanUserRequest)(nil),              // 4: proto.UnbanUserRequest
	(*UnbanUserResponse)(nil),             // 5: proto.UnbanUserResponse
	(*BanUserInCommunityRequest)(nil),     // 6: proto.BanUserInCommunityRequest
	(*BanUserInCommunityResponse)(nil),    // 7: proto.BanUserInCommunityResponse
	(*UnbanUserInCommunityRequest)(nil),   // 8: proto.UnbanUserInCommunityRequest
	(*UnbanUserInCommunityResponse)(nil),  // 9: proto.UnbanUserInCommunityResponse
	(*MuteUserInCommunityRequest)(nil),    // 10: proto.MuteUserInCommunityRequest
	(*MuteUserInCommunityResponse)(nil),   // 11: proto.MuteUserInCommunityResponse
	(*UnmuteUserInCommunityRequest)(nil),  // 12: proto.UnmuteUserInCommunityRequest
	(*UnmuteUserInCommunityResponse)(nil), // 13: proto.UnmuteUserInCommunityResponse
	(*ListModerationLogsRequest)(nil),     // 14: proto.ListModerationLogsRequest
	(*ListModerationLogsResponse)(nil),    // 15: proto.ListModerationLogsResponse
	(*timestamppb.Timestamp)(nil),         // 16: google.protobuf.Timestamp
}
var file_moderation_proto_depIdxs = []int32{
	16, // 0: proto.ModerationAction.created_at:type_name -> google.protobuf.Timestamp
	1,  // 1: proto.BanUserResponse.action:type_name -> proto.ModerationAction
	1,  // 2: proto.UnbanUserResponse.action:type_name -> proto.ModerationAction
	1,  // 3: proto.BanUserInCommunityResponse.action:type_name -> proto.ModerationAction
	1,  // 4: proto.UnbanUserInCommunityResponse.action:type_name -> proto.ModerationAction
	0,  // 5: proto.MuteUserInCommunityRequest.duration:type_name -> proto.MuteDuration
	16, // 6: proto.MuteUserInCommunityResponse.muted_until:type_name -> google.protobuf.Timestamp
	1,  // 7: proto.MuteUserInCommunityResponse.action:type_name -> proto.ModerationAction
	1,  // 8: proto.UnmuteUserInCommunityResponse.action:type_name -> proto.ModerationAction
	1,  // 9: proto.ListModerationLogsResponse.actions:type_name -> proto.ModerationAction
	2,  // 10: proto.ModerationService.BanUser:input_type -> proto.BanUserRequest
	4,  // 11: proto.ModerationService.UnbanUser:input_type -> proto.UnbanUserRequest
	6,  // 12: proto.ModerationService.BanUserInCommunity:input_type -> proto.BanUserInCommunityRequest
	8,  // 13: proto.ModerationService.UnbanUserInCommunity:input_type -> proto.UnbanUserInCommunityRequest
	10, // 14: proto.ModerationService.MuteUserInCommunity:input_type -> proto.MuteUserInCommunityRequest
	12, // 15: proto.ModerationService.UnmuteUserInCommunity:input_type -> proto.UnmuteUserInCommunityRequest
	14, // 16: proto.ModerationService.ListModerationLogs:input_type -> proto.ListModerationLogsRequest
	3,  // 17: proto.ModerationService.BanUser:output_type -> proto.BanUserResponse
	5,  // 18: proto.ModerationService.UnbanUser:output_type -> proto.UnbanUserResponse
	7,  // 19: proto.ModerationService.BanUserInCommunity:output_type -> proto.BanUserInCommunityResponse
	9,  // 20: proto.ModerationService.UnbanUserInCommunity:output_type -> proto.UnbanUserInCommunityResponse
	11, // 21: proto.ModerationService.MuteUserInCommunity:output_type -> proto.MuteUserInCommunityResponse
	13, // 22: proto.ModerationService.UnmuteUserInCommunity:output_type -> proto.UnmuteUserInCommunityResponse
	15, // 23: proto.ModerationService.ListModerationLogs:output_type -> proto.ListModerationLogsResponse
	17, // [17:24] is the sub-list for method output_type
	10, // [10:17] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_moderation_proto_init() }
func file_moderation_proto_init() {
	if File_moderation_proto != nil {
		return
	}
	file_moderation_proto_msgTypes[0].OneofWrappers = []any{}
	file_moderation_proto_msgTypes[13].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_moderation_proto_rawDesc), len(file_moderation_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_moderation_proto_goTypes,
		DependencyIndexes: file_moderation_proto_depIdxs,
		EnumInfos:         file_moderation_proto_enumTypes,
		MessageInfos:      file_moderation_proto_msgTypes,
	}.Build()
	File_moderation_proto = out.File
	file_moderation_proto_goTypes = nil
	file_moderation_proto_depIdxs = nil
}
