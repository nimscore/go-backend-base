// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: comment.proto

package proto

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCommentRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	PostId          string                 `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	Text            string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`                                                      // 1-10000 chars
	ParentCommentId *string                `protobuf:"bytes,3,opt,name=parent_comment_id,json=parentCommentId,proto3,oneof" json:"parent_comment_id,omitempty"` // for nested replies
	AttachmentUrls  []string               `protobuf:"bytes,4,rep,name=attachment_urls,json=attachmentUrls,proto3" json:"attachment_urls,omitempty"`            // S3 URLs from presigned upload
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCommentRequest) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *CreateCommentRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *CreateCommentRequest) GetParentCommentId() string {
	if x != nil && x.ParentCommentId != nil {
		return *x.ParentCommentId
	}
	return ""
}

func (x *CreateCommentRequest) GetAttachmentUrls() []string {
	if x != nil {
		return x.AttachmentUrls
	}
	return nil
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type GetCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentRequest) Reset() {
	*x = GetCommentRequest{}
	mi := &file_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentRequest) ProtoMessage() {}

func (x *GetCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentRequest.ProtoReflect.Descriptor instead.
func (*GetCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{2}
}

func (x *GetCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type GetCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentResponse) Reset() {
	*x = GetCommentResponse{}
	mi := &file_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentResponse) ProtoMessage() {}

func (x *GetCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentResponse.ProtoReflect.Descriptor instead.
func (*GetCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{3}
}

func (x *GetCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type UpdateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	Text          string                 `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentRequest) Reset() {
	*x = UpdateCommentRequest{}
	mi := &file_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentRequest) ProtoMessage() {}

func (x *UpdateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentRequest.ProtoReflect.Descriptor instead.
func (*UpdateCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *UpdateCommentRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type UpdateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateCommentResponse) Reset() {
	*x = UpdateCommentResponse{}
	mi := &file_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCommentResponse) ProtoMessage() {}

func (x *UpdateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCommentResponse.ProtoReflect.Descriptor instead.
func (*UpdateCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type LikeCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentRequest) Reset() {
	*x = LikeCommentRequest{}
	mi := &file_comment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentRequest) ProtoMessage() {}

func (x *LikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentRequest.ProtoReflect.Descriptor instead.
func (*LikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{8}
}

func (x *LikeCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type LikeCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	NewLikeCount  int32                  `protobuf:"varint,2,opt,name=new_like_count,json=newLikeCount,proto3" json:"new_like_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentResponse) Reset() {
	*x = LikeCommentResponse{}
	mi := &file_comment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentResponse) ProtoMessage() {}

func (x *LikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentResponse.ProtoReflect.Descriptor instead.
func (*LikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{9}
}

func (x *LikeCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LikeCommentResponse) GetNewLikeCount() int32 {
	if x != nil {
		return x.NewLikeCount
	}
	return 0
}

type UnlikeCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeCommentRequest) Reset() {
	*x = UnlikeCommentRequest{}
	mi := &file_comment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeCommentRequest) ProtoMessage() {}

func (x *UnlikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeCommentRequest.ProtoReflect.Descriptor instead.
func (*UnlikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{10}
}

func (x *UnlikeCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type UnlikeCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	NewLikeCount  int32                  `protobuf:"varint,2,opt,name=new_like_count,json=newLikeCount,proto3" json:"new_like_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlikeCommentResponse) Reset() {
	*x = UnlikeCommentResponse{}
	mi := &file_comment_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlikeCommentResponse) ProtoMessage() {}

func (x *UnlikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlikeCommentResponse.ProtoReflect.Descriptor instead.
func (*UnlikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{11}
}

func (x *UnlikeCommentResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UnlikeCommentResponse) GetNewLikeCount() int32 {
	if x != nil {
		return x.NewLikeCount
	}
	return 0
}

type StreamCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PostId        *string                `protobuf:"bytes,1,opt,name=post_id,json=postId,proto3,oneof" json:"post_id,omitempty"` // if empty, stream all platform comments
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamCommentRequest) Reset() {
	*x = StreamCommentRequest{}
	mi := &file_comment_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamCommentRequest) ProtoMessage() {}

func (x *StreamCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comment_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamCommentRequest.ProtoReflect.Descriptor instead.
func (*StreamCommentRequest) Descriptor() ([]byte, []int) {
	return file_comment_proto_rawDescGZIP(), []int{12}
}

func (x *StreamCommentRequest) GetPostId() string {
	if x != nil && x.PostId != nil {
		return *x.PostId
	}
	return ""
}

var File_comment_proto protoreflect.FileDescriptor

const file_comment_proto_rawDesc = "" +
	"\n" +
	"\rcomment.proto\x12\x05proto\x1a\fentity.proto\x1a\x1cgoogle/api/annotations.proto\"\xb3\x01\n" +
	"\x14CreateCommentRequest\x12\x17\n" +
	"\apost_id\x18\x01 \x01(\tR\x06postId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\x12/\n" +
	"\x11parent_comment_id\x18\x03 \x01(\tH\x00R\x0fparentCommentId\x88\x01\x01\x12'\n" +
	"\x0fattachment_urls\x18\x04 \x03(\tR\x0eattachmentUrlsB\x14\n" +
	"\x12_parent_comment_id\"A\n" +
	"\x15CreateCommentResponse\x12(\n" +
	"\acomment\x18\x01 \x01(\v2\x0e.proto.CommentR\acomment\"2\n" +
	"\x11GetCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\">\n" +
	"\x12GetCommentResponse\x12(\n" +
	"\acomment\x18\x01 \x01(\v2\x0e.proto.CommentR\acomment\"I\n" +
	"\x14UpdateCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\x12\x12\n" +
	"\x04text\x18\x02 \x01(\tR\x04text\"A\n" +
	"\x15UpdateCommentResponse\x12(\n" +
	"\acomment\x18\x01 \x01(\v2\x0e.proto.CommentR\acomment\"5\n" +
	"\x14DeleteCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"1\n" +
	"\x15DeleteCommentResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"3\n" +
	"\x12LikeCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"U\n" +
	"\x13LikeCommentResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12$\n" +
	"\x0enew_like_count\x18\x02 \x01(\x05R\fnewLikeCount\"5\n" +
	"\x14UnlikeCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"W\n" +
	"\x15UnlikeCommentResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12$\n" +
	"\x0enew_like_count\x18\x02 \x01(\x05R\fnewLikeCount\"@\n" +
	"\x14StreamCommentRequest\x12\x1c\n" +
	"\apost_id\x18\x01 \x01(\tH\x00R\x06postId\x88\x01\x01B\n" +
	"\n" +
	"\b_post_id2\xa2\x05\n" +
	"\x0eCommentService\x12Y\n" +
	"\x06Create\x12\x1b.proto.CreateCommentRequest\x1a\x1c.proto.CreateCommentResponse\"\x14\x82\xd3\xe4\x93\x02\x0e:\x01*\"\t/comments\x12Z\n" +
	"\x03Get\x12\x18.proto.GetCommentRequest\x1a\x19.proto.GetCommentResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/comments/{comment_id}\x12f\n" +
	"\x06Update\x12\x1b.proto.UpdateCommentRequest\x1a\x1c.proto.UpdateCommentResponse\"!\x82\xd3\xe4\x93\x02\x1b:\x01*2\x16/comments/{comment_id}\x12c\n" +
	"\x06Delete\x12\x1b.proto.DeleteCommentRequest\x1a\x1c.proto.DeleteCommentResponse\"\x1e\x82\xd3\xe4\x93\x02\x18*\x16/comments/{comment_id}\x12b\n" +
	"\x04Like\x12\x19.proto.LikeCommentRequest\x1a\x1a.proto.LikeCommentResponse\"#\x82\xd3\xe4\x93\x02\x1d\"\x1b/comments/{comment_id}/like\x12h\n" +
	"\x06Unlike\x12\x1b.proto.UnlikeCommentRequest\x1a\x1c.proto.UnlikeCommentResponse\"#\x82\xd3\xe4\x93\x02\x1d*\x1b/comments/{comment_id}/like\x12>\n" +
	"\x06Stream\x12\x1b.proto.StreamCommentRequest\x1a\x13.proto.CommentEvent\"\x000\x01B\bZ\x06/protob\x06proto3"

var (
	file_comment_proto_rawDescOnce sync.Once
	file_comment_proto_rawDescData []byte
)

func file_comment_proto_rawDescGZIP() []byte {
	file_comment_proto_rawDescOnce.Do(func() {
		file_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comment_proto_rawDesc), len(file_comment_proto_rawDesc)))
	})
	return file_comment_proto_rawDescData
}

var file_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_comment_proto_goTypes = []any{
	(*CreateCommentRequest)(nil),  // 0: proto.CreateCommentRequest
	(*CreateCommentResponse)(nil), // 1: proto.CreateCommentResponse
	(*GetCommentRequest)(nil),     // 2: proto.GetCommentRequest
	(*GetCommentResponse)(nil),    // 3: proto.GetCommentResponse
	(*UpdateCommentRequest)(nil),  // 4: proto.UpdateCommentRequest
	(*UpdateCommentResponse)(nil), // 5: proto.UpdateCommentResponse
	(*DeleteCommentRequest)(nil),  // 6: proto.DeleteCommentRequest
	(*DeleteCommentResponse)(nil), // 7: proto.DeleteCommentResponse
	(*LikeCommentRequest)(nil),    // 8: proto.LikeCommentRequest
	(*LikeCommentResponse)(nil),   // 9: proto.LikeCommentResponse
	(*UnlikeCommentRequest)(nil),  // 10: proto.UnlikeCommentRequest
	(*UnlikeCommentResponse)(nil), // 11: proto.UnlikeCommentResponse
	(*StreamCommentRequest)(nil),  // 12: proto.StreamCommentRequest
	(*Comment)(nil),               // 13: proto.Comment
	(*CommentEvent)(nil),          // 14: proto.CommentEvent
}
var file_comment_proto_depIdxs = []int32{
	13, // 0: proto.CreateCommentResponse.comment:type_name -> proto.Comment
	13, // 1: proto.GetCommentResponse.comment:type_name -> proto.Comment
	13, // 2: proto.UpdateCommentResponse.comment:type_name -> proto.Comment
	0,  // 3: proto.CommentService.Create:input_type -> proto.CreateCommentRequest
	2,  // 4: proto.CommentService.Get:input_type -> proto.GetCommentRequest
	4,  // 5: proto.CommentService.Update:input_type -> proto.UpdateCommentRequest
	6,  // 6: proto.CommentService.Delete:input_type -> proto.DeleteCommentRequest
	8,  // 7: proto.CommentService.Like:input_type -> proto.LikeCommentRequest
	10, // 8: proto.CommentService.Unlike:input_type -> proto.UnlikeCommentRequest
	12, // 9: proto.CommentService.Stream:input_type -> proto.StreamCommentRequest
	1,  // 10: proto.CommentService.Create:output_type -> proto.CreateCommentResponse
	3,  // 11: proto.CommentService.Get:output_type -> proto.GetCommentResponse
	5,  // 12: proto.CommentService.Update:output_type -> proto.UpdateCommentResponse
	7,  // 13: proto.CommentService.Delete:output_type -> proto.DeleteCommentResponse
	9,  // 14: proto.CommentService.Like:output_type -> proto.LikeCommentResponse
	11, // 15: proto.CommentService.Unlike:output_type -> proto.UnlikeCommentResponse
	14, // 16: proto.CommentService.Stream:output_type -> proto.CommentEvent
	10, // [10:17] is the sub-list for method output_type
	3,  // [3:10] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_comment_proto_init() }
func file_comment_proto_init() {
	if File_comment_proto != nil {
		return
	}
	file_entity_proto_init()
	file_comment_proto_msgTypes[0].OneofWrappers = []any{}
	file_comment_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comment_proto_rawDesc), len(file_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comment_proto_goTypes,
		DependencyIndexes: file_comment_proto_depIdxs,
		MessageInfos:      file_comment_proto_msgTypes,
	}.Build()
	File_comment_proto = out.File
	file_comment_proto_goTypes = nil
	file_comment_proto_depIdxs = nil
}
