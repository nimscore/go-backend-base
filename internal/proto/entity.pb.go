// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.1
// source: entity.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PostStatus int32

const (
	PostStatus_POST_STATUS_UNSPECIFIED PostStatus = 0
	PostStatus_POST_STATUS_DRAFT       PostStatus = 1
	PostStatus_POST_STATUS_PUBLISHED   PostStatus = 2
)

// Enum value maps for PostStatus.
var (
	PostStatus_name = map[int32]string{
		0: "POST_STATUS_UNSPECIFIED",
		1: "POST_STATUS_DRAFT",
		2: "POST_STATUS_PUBLISHED",
	}
	PostStatus_value = map[string]int32{
		"POST_STATUS_UNSPECIFIED": 0,
		"POST_STATUS_DRAFT":       1,
		"POST_STATUS_PUBLISHED":   2,
	}
)

func (x PostStatus) Enum() *PostStatus {
	p := new(PostStatus)
	*p = x
	return p
}

func (x PostStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_proto_enumTypes[0].Descriptor()
}

func (PostStatus) Type() protoreflect.EnumType {
	return &file_entity_proto_enumTypes[0]
}

func (x PostStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostStatus.Descriptor instead.
func (PostStatus) EnumDescriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{0}
}

type CommentEventType int32

const (
	CommentEventType_COMMENT_EVENT_TYPE_UNSPECIFIED CommentEventType = 0
	CommentEventType_COMMENT_EVENT_TYPE_CREATED     CommentEventType = 1
	CommentEventType_COMMENT_EVENT_TYPE_UPDATED     CommentEventType = 2
	CommentEventType_COMMENT_EVENT_TYPE_DELETED     CommentEventType = 3
)

// Enum value maps for CommentEventType.
var (
	CommentEventType_name = map[int32]string{
		0: "COMMENT_EVENT_TYPE_UNSPECIFIED",
		1: "COMMENT_EVENT_TYPE_CREATED",
		2: "COMMENT_EVENT_TYPE_UPDATED",
		3: "COMMENT_EVENT_TYPE_DELETED",
	}
	CommentEventType_value = map[string]int32{
		"COMMENT_EVENT_TYPE_UNSPECIFIED": 0,
		"COMMENT_EVENT_TYPE_CREATED":     1,
		"COMMENT_EVENT_TYPE_UPDATED":     2,
		"COMMENT_EVENT_TYPE_DELETED":     3,
	}
)

func (x CommentEventType) Enum() *CommentEventType {
	p := new(CommentEventType)
	*p = x
	return p
}

func (x CommentEventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommentEventType) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_proto_enumTypes[1].Descriptor()
}

func (CommentEventType) Type() protoreflect.EnumType {
	return &file_entity_proto_enumTypes[1]
}

func (x CommentEventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommentEventType.Descriptor instead.
func (CommentEventType) EnumDescriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{1}
}

type Community struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	OwnerId       string                 `protobuf:"bytes,2,opt,name=owner_id,json=ownerId,proto3" json:"owner_id,omitempty"`
	OwnerUsername string                 `protobuf:"bytes,3,opt,name=owner_username,json=ownerUsername,proto3" json:"owner_username,omitempty"`
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Rules         string                 `protobuf:"bytes,6,opt,name=rules,proto3" json:"rules,omitempty"`
	MemberCount   int32                  `protobuf:"varint,7,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
	PostCount     int32                  `protobuf:"varint,8,opt,name=post_count,json=postCount,proto3" json:"post_count,omitempty"`
	Reputation    int32                  `protobuf:"varint,9,opt,name=reputation,proto3" json:"reputation,omitempty"` // FR-455-458: sum(post_likes) + (sum(comments) Ã— 0.1)
	IsBanned      bool                   `protobuf:"varint,10,opt,name=is_banned,json=isBanned,proto3" json:"is_banned,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Community) Reset() {
	*x = Community{}
	mi := &file_entity_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Community) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Community) ProtoMessage() {}

func (x *Community) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Community.ProtoReflect.Descriptor instead.
func (*Community) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{0}
}

func (x *Community) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Community) GetOwnerId() string {
	if x != nil {
		return x.OwnerId
	}
	return ""
}

func (x *Community) GetOwnerUsername() string {
	if x != nil {
		return x.OwnerUsername
	}
	return ""
}

func (x *Community) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Community) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Community) GetRules() string {
	if x != nil {
		return x.Rules
	}
	return ""
}

func (x *Community) GetMemberCount() int32 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Community) GetPostCount() int32 {
	if x != nil {
		return x.PostCount
	}
	return 0
}

func (x *Community) GetReputation() int32 {
	if x != nil {
		return x.Reputation
	}
	return 0
}

func (x *Community) GetIsBanned() bool {
	if x != nil {
		return x.IsBanned
	}
	return false
}

func (x *Community) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Community) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Post struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AuthorId         string                 `protobuf:"bytes,2,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorUsername   string                 `protobuf:"bytes,3,opt,name=author_username,json=authorUsername,proto3" json:"author_username,omitempty"`
	CommunityId      string                 `protobuf:"bytes,4,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	CommunityName    string                 `protobuf:"bytes,5,opt,name=community_name,json=communityName,proto3" json:"community_name,omitempty"`
	Title            string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Content          *structpb.Struct       `protobuf:"bytes,7,opt,name=content,proto3" json:"content,omitempty"` // JSON content
	Status           PostStatus             `protobuf:"varint,8,opt,name=status,proto3,enum=proto.PostStatus" json:"status,omitempty"`
	LikeCount        int32                  `protobuf:"varint,9,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	CommentCount     int32                  `protobuf:"varint,10,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
	IsLikedByMe      bool                   `protobuf:"varint,11,opt,name=is_liked_by_me,json=isLikedByMe,proto3" json:"is_liked_by_me,omitempty"`
	IsBookmarkedByMe bool                   `protobuf:"varint,12,opt,name=is_bookmarked_by_me,json=isBookmarkedByMe,proto3" json:"is_bookmarked_by_me,omitempty"`
	PublishedAt      *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	CreatedAt        *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *Post) Reset() {
	*x = Post{}
	mi := &file_entity_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Post) ProtoMessage() {}

func (x *Post) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Post.ProtoReflect.Descriptor instead.
func (*Post) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{1}
}

func (x *Post) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Post) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *Post) GetAuthorUsername() string {
	if x != nil {
		return x.AuthorUsername
	}
	return ""
}

func (x *Post) GetCommunityId() string {
	if x != nil {
		return x.CommunityId
	}
	return ""
}

func (x *Post) GetCommunityName() string {
	if x != nil {
		return x.CommunityName
	}
	return ""
}

func (x *Post) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Post) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *Post) GetStatus() PostStatus {
	if x != nil {
		return x.Status
	}
	return PostStatus_POST_STATUS_UNSPECIFIED
}

func (x *Post) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Post) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *Post) GetIsLikedByMe() bool {
	if x != nil {
		return x.IsLikedByMe
	}
	return false
}

func (x *Post) GetIsBookmarkedByMe() bool {
	if x != nil {
		return x.IsBookmarkedByMe
	}
	return false
}

func (x *Post) GetPublishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.PublishedAt
	}
	return nil
}

func (x *Post) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Post) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type MediaAttachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Type          string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"` // image, video, audio, gif
	SizeBytes     int64                  `protobuf:"varint,3,opt,name=size_bytes,json=sizeBytes,proto3" json:"size_bytes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MediaAttachment) Reset() {
	*x = MediaAttachment{}
	mi := &file_entity_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MediaAttachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaAttachment) ProtoMessage() {}

func (x *MediaAttachment) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaAttachment.ProtoReflect.Descriptor instead.
func (*MediaAttachment) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{2}
}

func (x *MediaAttachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MediaAttachment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MediaAttachment) GetSizeBytes() int64 {
	if x != nil {
		return x.SizeBytes
	}
	return 0
}

type Comment struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Id              string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PostId          string                 `protobuf:"bytes,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	AuthorId        string                 `protobuf:"bytes,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	AuthorUsername  string                 `protobuf:"bytes,4,opt,name=author_username,json=authorUsername,proto3" json:"author_username,omitempty"`
	AuthorAvatar    string                 `protobuf:"bytes,5,opt,name=author_avatar,json=authorAvatar,proto3" json:"author_avatar,omitempty"`
	Text            string                 `protobuf:"bytes,6,opt,name=text,proto3" json:"text,omitempty"`
	ParentCommentId *string                `protobuf:"bytes,7,opt,name=parent_comment_id,json=parentCommentId,proto3,oneof" json:"parent_comment_id,omitempty"`
	Attachments     []*MediaAttachment     `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
	LikeCount       int32                  `protobuf:"varint,9,opt,name=like_count,json=likeCount,proto3" json:"like_count,omitempty"`
	IsLikedByMe     bool                   `protobuf:"varint,10,opt,name=is_liked_by_me,json=isLikedByMe,proto3" json:"is_liked_by_me,omitempty"`
	IsEdited        bool                   `protobuf:"varint,11,opt,name=is_edited,json=isEdited,proto3" json:"is_edited,omitempty"`
	CreatedAt       *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_entity_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{3}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetPostId() string {
	if x != nil {
		return x.PostId
	}
	return ""
}

func (x *Comment) GetAuthorId() string {
	if x != nil {
		return x.AuthorId
	}
	return ""
}

func (x *Comment) GetAuthorUsername() string {
	if x != nil {
		return x.AuthorUsername
	}
	return ""
}

func (x *Comment) GetAuthorAvatar() string {
	if x != nil {
		return x.AuthorAvatar
	}
	return ""
}

func (x *Comment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *Comment) GetParentCommentId() string {
	if x != nil && x.ParentCommentId != nil {
		return *x.ParentCommentId
	}
	return ""
}

func (x *Comment) GetAttachments() []*MediaAttachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *Comment) GetLikeCount() int32 {
	if x != nil {
		return x.LikeCount
	}
	return 0
}

func (x *Comment) GetIsLikedByMe() bool {
	if x != nil {
		return x.IsLikedByMe
	}
	return false
}

func (x *Comment) GetIsEdited() bool {
	if x != nil {
		return x.IsEdited
	}
	return false
}

func (x *Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Comment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CommentEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventType     CommentEventType       `protobuf:"varint,1,opt,name=event_type,json=eventType,proto3,enum=proto.CommentEventType" json:"event_type,omitempty"`
	Comment       *Comment               `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentEvent) Reset() {
	*x = CommentEvent{}
	mi := &file_entity_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentEvent) ProtoMessage() {}

func (x *CommentEvent) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentEvent.ProtoReflect.Descriptor instead.
func (*CommentEvent) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{4}
}

func (x *CommentEvent) GetEventType() CommentEventType {
	if x != nil {
		return x.EventType
	}
	return CommentEventType_COMMENT_EVENT_TYPE_UNSPECIFIED
}

func (x *CommentEvent) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

func (x *CommentEvent) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_entity_proto protoreflect.FileDescriptor

const file_entity_proto_rawDesc = "" +
	"\n" +
	"\fentity.proto\x12\x05proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1cgoogle/protobuf/struct.proto\"\x9e\x03\n" +
	"\tCommunity\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x19\n" +
	"\bowner_id\x18\x02 \x01(\tR\aownerId\x12%\n" +
	"\x0eowner_username\x18\x03 \x01(\tR\rownerUsername\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x14\n" +
	"\x05rules\x18\x06 \x01(\tR\x05rules\x12!\n" +
	"\fmember_count\x18\a \x01(\x05R\vmemberCount\x12\x1d\n" +
	"\n" +
	"post_count\x18\b \x01(\x05R\tpostCount\x12\x1e\n" +
	"\n" +
	"reputation\x18\t \x01(\x05R\n" +
	"reputation\x12\x1b\n" +
	"\tis_banned\x18\n" +
	" \x01(\bR\bisBanned\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xe7\x04\n" +
	"\x04Post\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1b\n" +
	"\tauthor_id\x18\x02 \x01(\tR\bauthorId\x12'\n" +
	"\x0fauthor_username\x18\x03 \x01(\tR\x0eauthorUsername\x12!\n" +
	"\fcommunity_id\x18\x04 \x01(\tR\vcommunityId\x12%\n" +
	"\x0ecommunity_name\x18\x05 \x01(\tR\rcommunityName\x12\x14\n" +
	"\x05title\x18\x06 \x01(\tR\x05title\x121\n" +
	"\acontent\x18\a \x01(\v2\x17.google.protobuf.StructR\acontent\x12)\n" +
	"\x06status\x18\b \x01(\x0e2\x11.proto.PostStatusR\x06status\x12\x1d\n" +
	"\n" +
	"like_count\x18\t \x01(\x05R\tlikeCount\x12#\n" +
	"\rcomment_count\x18\n" +
	" \x01(\x05R\fcommentCount\x12#\n" +
	"\x0eis_liked_by_me\x18\v \x01(\bR\visLikedByMe\x12-\n" +
	"\x13is_bookmarked_by_me\x18\f \x01(\bR\x10isBookmarkedByMe\x12=\n" +
	"\fpublished_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\vpublishedAt\x129\n" +
	"\n" +
	"created_at\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"V\n" +
	"\x0fMediaAttachment\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x1d\n" +
	"\n" +
	"size_bytes\x18\x03 \x01(\x03R\tsizeBytes\"\x89\x04\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\apost_id\x18\x02 \x01(\tR\x06postId\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\tR\bauthorId\x12'\n" +
	"\x0fauthor_username\x18\x04 \x01(\tR\x0eauthorUsername\x12#\n" +
	"\rauthor_avatar\x18\x05 \x01(\tR\fauthorAvatar\x12\x12\n" +
	"\x04text\x18\x06 \x01(\tR\x04text\x12/\n" +
	"\x11parent_comment_id\x18\a \x01(\tH\x00R\x0fparentCommentId\x88\x01\x01\x128\n" +
	"\vattachments\x18\b \x03(\v2\x16.proto.MediaAttachmentR\vattachments\x12\x1d\n" +
	"\n" +
	"like_count\x18\t \x01(\x05R\tlikeCount\x12#\n" +
	"\x0eis_liked_by_me\x18\n" +
	" \x01(\bR\visLikedByMe\x12\x1b\n" +
	"\tis_edited\x18\v \x01(\bR\bisEdited\x129\n" +
	"\n" +
	"created_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAtB\x14\n" +
	"\x12_parent_comment_id\"\xaa\x01\n" +
	"\fCommentEvent\x126\n" +
	"\n" +
	"event_type\x18\x01 \x01(\x0e2\x17.proto.CommentEventTypeR\teventType\x12(\n" +
	"\acomment\x18\x02 \x01(\v2\x0e.proto.CommentR\acomment\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*[\n" +
	"\n" +
	"PostStatus\x12\x1b\n" +
	"\x17POST_STATUS_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11POST_STATUS_DRAFT\x10\x01\x12\x19\n" +
	"\x15POST_STATUS_PUBLISHED\x10\x02*\x96\x01\n" +
	"\x10CommentEventType\x12\"\n" +
	"\x1eCOMMENT_EVENT_TYPE_UNSPECIFIED\x10\x00\x12\x1e\n" +
	"\x1aCOMMENT_EVENT_TYPE_CREATED\x10\x01\x12\x1e\n" +
	"\x1aCOMMENT_EVENT_TYPE_UPDATED\x10\x02\x12\x1e\n" +
	"\x1aCOMMENT_EVENT_TYPE_DELETED\x10\x03B\bZ\x06/protob\x06proto3"

var (
	file_entity_proto_rawDescOnce sync.Once
	file_entity_proto_rawDescData []byte
)

func file_entity_proto_rawDescGZIP() []byte {
	file_entity_proto_rawDescOnce.Do(func() {
		file_entity_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_entity_proto_rawDesc), len(file_entity_proto_rawDesc)))
	})
	return file_entity_proto_rawDescData
}

var file_entity_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_entity_proto_goTypes = []any{
	(PostStatus)(0),               // 0: proto.PostStatus
	(CommentEventType)(0),         // 1: proto.CommentEventType
	(*Community)(nil),             // 2: proto.Community
	(*Post)(nil),                  // 3: proto.Post
	(*MediaAttachment)(nil),       // 4: proto.MediaAttachment
	(*Comment)(nil),               // 5: proto.Comment
	(*CommentEvent)(nil),          // 6: proto.CommentEvent
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
	(*structpb.Struct)(nil),       // 8: google.protobuf.Struct
}
var file_entity_proto_depIdxs = []int32{
	7,  // 0: proto.Community.created_at:type_name -> google.protobuf.Timestamp
	7,  // 1: proto.Community.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 2: proto.Post.content:type_name -> google.protobuf.Struct
	0,  // 3: proto.Post.status:type_name -> proto.PostStatus
	7,  // 4: proto.Post.published_at:type_name -> google.protobuf.Timestamp
	7,  // 5: proto.Post.created_at:type_name -> google.protobuf.Timestamp
	7,  // 6: proto.Post.updated_at:type_name -> google.protobuf.Timestamp
	4,  // 7: proto.Comment.attachments:type_name -> proto.MediaAttachment
	7,  // 8: proto.Comment.created_at:type_name -> google.protobuf.Timestamp
	7,  // 9: proto.Comment.updated_at:type_name -> google.protobuf.Timestamp
	1,  // 10: proto.CommentEvent.event_type:type_name -> proto.CommentEventType
	5,  // 11: proto.CommentEvent.comment:type_name -> proto.Comment
	7,  // 12: proto.CommentEvent.timestamp:type_name -> google.protobuf.Timestamp
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_entity_proto_init() }
func file_entity_proto_init() {
	if File_entity_proto != nil {
		return
	}
	file_entity_proto_msgTypes[3].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_entity_proto_rawDesc), len(file_entity_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_proto_goTypes,
		DependencyIndexes: file_entity_proto_depIdxs,
		EnumInfos:         file_entity_proto_enumTypes,
		MessageInfos:      file_entity_proto_msgTypes,
	}.Build()
	File_entity_proto = out.File
	file_entity_proto_goTypes = nil
	file_entity_proto_depIdxs = nil
}
